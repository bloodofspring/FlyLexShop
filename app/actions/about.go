package actions

import (
	"context"
	"sync"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// About –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
// Name - –∏–º—è –∫–æ–º–∞–Ω–¥—ã
// Client - —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
type About struct {
	Name   string
	Client tgbotapi.BotAPI
	mu     *sync.Mutex
}

func NewAboutHandler(client tgbotapi.BotAPI) *About {
	return &About{
		Name:   "about",
		Client: client,
		mu:     &sync.Mutex{},
	}
}

// Run –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
// update - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram API
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
func (a About) Run(update tgbotapi.Update) error {
	ctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)
    defer cancel()

    var wg sync.WaitGroup
    var err error

    wg.Add(1)
    go func() {
        defer wg.Done()
        select {
        case <-ctx.Done():
            return
        default:
			a.mu.Lock()
			ClearNextStepForUser(update, &a.Client, true)
			a.mu.Unlock()
		
			const text = `üî•–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º–∞–Ω–¥–∞ FlyLex –≤ –±–æ—Ç–µ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∫—É–ø–æ–∫ –Ω–∞—à–µ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏!üéØFlyLex –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –¥—Ä—É–≥–∏—Ö —Ç–µ–º, —á—Ç–æ –Ω–∞—à–∞ –ø—Ä–æ–¥—É–∫—Ü–∏—è —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–§.
			
			ü•áFlyLex - –≤—ã–±–æ—Ä –ª—É—á—à–∏—Ö! –†–∞–º–∞ Pike5‚Äô –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ø-–ø–∏–ª–æ—Ç–∞–º–∏, –≤ —Ç–æ–º —á–∏—Å–ª–µ, –ü–ª–∞—Ç–æ–Ω–æ–º –ß–µ—Ä–µ–º–Ω—ã—Ö.
			
			‚úÖ<a href="https://t.me/FlyLex_official">–¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª</a>
			‚úÖ<a href="https://t.me/FlyLex_response">–ß–∞—Ç —Å –æ—Ç–∑—ã–≤–∞–º–∏</a>
			‚úÖ<a href="https://t.me/FlyLex_chat">–ß–∞—Ç</a>
			
			‚öôÔ∏è–ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –∑–∞–∫–∞–∑–∞–º –∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏:
			‚úÖ–¢–µ–ª–µ–≥—Ä–∞–º–º: <b>@FlyLex_Admin</b>
			‚úÖ–¢–µ–ª–µ—Ñ–æ–Ω: <b>8(925)-222-58-10</b>
			
			üë®‚Äçüíª–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è
			<b>8:00 - 22:00 –ø–æ –ú–°–ö</b>`
			message := tgbotapi.NewEditMessageText(update.CallbackQuery.Message.Chat.ID, update.CallbackQuery.Message.MessageID, text)
			message.ParseMode = "HTML"
			message.DisableWebPagePreview = true
		
			toMainMenuCallbackData := "mainMenu"
			message.ReplyMarkup = &tgbotapi.InlineKeyboardMarkup{
				InlineKeyboard: [][]tgbotapi.InlineKeyboardButton{
					{{Text: "–ù–∞ –≥–ª–∞–≤–Ω—É—é", CallbackData: &toMainMenuCallbackData}},
				},
			}
		
			a.mu.Lock()
			_, err = a.Client.Send(message)
			a.mu.Unlock()
        }
    }()

	done := make(chan struct{})
	go func() {
		wg.Wait()
		close(done)
	}()

	select {
	case <-done:
		return err
	case <-ctx.Done():
		return ctx.Err()
	}
}

// GetName –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è –∫–æ–º–∞–Ω–¥—ã
func (a About) GetName() string {
	return a.Name
}
